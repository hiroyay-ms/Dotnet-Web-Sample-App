name: Build and deploy ASP.Net Core app to Container Apps

on:
  workflow_dispatch:
    inputs:
      useExistingImage:
        description: Use Existing Image
        type: boolean
        required: true
      tagName:
        description: Tag Name
        type: string
        required: true
      resourceGroup:
        description: Resource Group
        type: string
        required: true
      containerAppName:
        description: Container App Name
        type: string
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    if: github.event.inputs.useExistingImage == 'false'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: Login to Azure Container Registry
        run: az acr login --name ${{ secrets.REGISTRY_LOGINSERVER }}

      - name: Docker build
        run: docker build . -t ${{ secrets.REGISTRY_LOGINSERVER }}/web:v${{ github.inputs.tagName }} -f .docker/dockerfile

      - name: Docker push
        run: docker push ${{ secrets.REGISTRY_LOGINSERVER }}/web:v${{ github.inputs.tagName }}

  deploy:
    if: always()
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Container App
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp registry set -n ${{ github.event.inputs.containerAppName }} -g ${{ github.event.inputs.resourceGroup }} --server ${{ secrets.REGISTRY_LOGINSERVER }} --identity system
            az containerapp update -n ${{ github.event.inputs.containerAppName }} -g ${{ github.event.inputs.resourceGroup }} --image ${{ secrets.REGISTRY_LOGINSERVER }}/web:${{ github.event.inputs.tagName }} --set-env-vars "SqlConnectionString=secretref:sqlconnectionstring"
